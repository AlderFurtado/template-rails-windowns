version: '3.8'

services:
    web:
        build: .
        image: rails-docker
        restart: "no"
        environment:
            - DBHOST=postgresql
            - DBUSER=postgres
            - DBPASS=password
        ports:
            - 3000:3000
        depends_on:
            - postgresql
        volumes:
            - "./:/var/www"

    postgresql:
        image: postgres
        restart: "no"
        ports:
            - 5432:5432
        environment:
            POSTGRES_DB: docker_rails_development
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        volumes:
            - postgresdb:/var/lib/postgresql/data/
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181

    kafka:
        image: confluentinc/cp-kafka:latest
        ports:
        # To learn about configuring Kafka for access across networks see
        # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
          - "9092:9092"
        depends_on:
          - zookeeper
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    # zookeeper:
    #     image: wurstmeister/zookeeper
    #     ports:
    #       - "2181:2181"
    # kafka1:
    #     image: wurstmeister/kafka:0.11.0.1
    #     ports:
    #       - "9092:9092"
    #     environment:
    #       KAFKA_BROKER_ID: 1
    #       KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
    #       KAFKA_ADVERTISED_PORT: 9092
    #       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    #       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          
volumes:
    postgresdb:
    zookeeper_data:
      driver: local
    kafka_data:
      driver: local